//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JobShop
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JobShopEntities : DbContext
    {
        public JobShopEntities()
            : base("name=JobShopEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRoles> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUsers> AspNetUsers { get; set; }
        public virtual DbSet<JobRequirements> JobRequirements { get; set; }
        public virtual DbSet<Jobs> Jobs { get; set; }
        public virtual DbSet<JobSkills> JobSkills { get; set; }
        public virtual DbSet<CandidateEducation> CandidateEducation { get; set; }
        public virtual DbSet<CandidateExperience> CandidateExperience { get; set; }
        public virtual DbSet<CandidateReq> CandidateReq { get; set; }
        public virtual DbSet<CandidateSkills> CandidateSkills { get; set; }
        public virtual DbSet<Candidates> Candidates { get; set; }
        public virtual DbSet<AspNetUserDetails> AspNetUserDetails { get; set; }
    
        public virtual ObjectResult<SearchByRadius_Result> SearchByRadius(Nullable<double> distance, Nullable<double> lat, Nullable<double> @long)
        {
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchByRadius_Result>("SearchByRadius", distanceParameter, latParameter, longParameter);
        }
    
        public virtual ObjectResult<SearchByRadiusCV_Result> SearchByRadiusCV(Nullable<double> distance, Nullable<double> lat, Nullable<double> @long)
        {
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchByRadiusCV_Result>("SearchByRadiusCV", distanceParameter, latParameter, longParameter);
        }
    
        public virtual ObjectResult<SearchByRadiusJobs_Result> SearchByRadiusJobs(Nullable<double> distance, Nullable<double> lat, Nullable<double> @long)
        {
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("distance", distance) :
                new ObjectParameter("distance", typeof(double));
    
            var latParameter = lat.HasValue ?
                new ObjectParameter("lat", lat) :
                new ObjectParameter("lat", typeof(double));
    
            var longParameter = @long.HasValue ?
                new ObjectParameter("long", @long) :
                new ObjectParameter("long", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchByRadiusJobs_Result>("SearchByRadiusJobs", distanceParameter, latParameter, longParameter);
        }
    }
}
